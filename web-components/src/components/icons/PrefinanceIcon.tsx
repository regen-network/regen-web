import React from 'react';

type Props = {
  linearGradient?: boolean;
  disabled?: boolean;
  width?: string;
  height?: string;
} & React.SVGProps<SVGSVGElement>;

export const PrefinanceIcon = ({
  width = '18',
  height = '19',
  disabled,
  ...props
}: Props) => {
  const randomId = Math.random().toString(36).substring(7);
  const gradientId = props
    ? `shopping_bag_gradient-${randomId}`
    : 'shopping_bag_gradient';
  return (
    <svg
      id={randomId}
      width={width}
      height={height}
      viewBox="0 0 24 24"
      fill="none"
      preserveAspectRatio="none"
      {...props}
    >
      <g id="Icon / Prefinance">
        <path
          id={randomId}
          fill-rule="evenodd"
          clipRule="evenodd"
          d="M4.82566 0.399529C5.37735 0.373963 5.84531 0.800472 5.87088 1.35216L5.93787 2.79778C11.0281 -0.57457 17.8965 0.775273 21.3278 5.84308C23.2789 8.72471 23.7005 12.1929 22.7797 15.284C22.6014 15.8827 22.3726 16.4675 22.0947 17.0317C21.8506 17.5271 21.2512 17.7309 20.7557 17.4868C20.2603 17.2427 20.0565 16.6433 20.3006 16.1478C20.5286 15.685 20.7164 15.2048 20.8629 14.713C21.6199 12.1719 21.2725 9.32859 19.6717 6.96439C16.8958 2.86451 11.3786 1.72984 7.22067 4.34992L8.80552 4.66899C9.34694 4.77799 9.69748 5.30526 9.58848 5.84668C9.47948 6.38811 8.95221 6.73865 8.41079 6.62965L4.83825 5.91041C4.38841 5.81985 4.05793 5.43475 4.03668 4.97637L3.87302 1.44475C3.84745 0.893058 4.27396 0.425096 4.82566 0.399529ZM2.99956 7.56644C3.5143 7.76659 3.76933 8.34613 3.56918 8.86087C2.51569 11.5702 2.76736 14.7304 4.51818 17.3162C7.28848 21.4078 12.7889 22.5461 16.9439 19.9466L15.3172 19.5808C14.7784 19.4597 14.4398 18.9246 14.5609 18.3858C14.6821 17.847 15.2171 17.5084 15.756 17.6295L19.3114 18.4291C19.7591 18.5297 20.0808 18.9222 20.0917 19.3809L20.1758 22.9153C20.189 23.4675 19.752 23.9257 19.1999 23.9388C18.6478 23.952 18.1895 23.515 18.1764 22.9629L18.1429 21.5543C13.0641 24.8357 6.26892 23.4692 2.86208 18.4375C0.727507 15.2849 0.423806 11.4313 1.70514 8.13606C1.90529 7.62132 2.48482 7.36629 2.99956 7.56644ZM10.7679 9.69946C10.7679 9.16213 11.1795 8.87613 12.0029 8.84146C12.0809 8.84146 12.1199 8.88046 12.1199 8.95846V10.6485C12.1199 10.7265 12.0852 10.7568 12.0159 10.7395C12.0072 10.7308 11.9899 10.7265 11.9639 10.7265C11.9465 10.7178 11.9335 10.7135 11.9249 10.7135C11.1535 10.5141 10.7679 10.1761 10.7679 9.69946ZM13.2249 13.7035C13.2249 14.2668 12.8349 14.5831 12.0549 14.6525C11.9769 14.6525 11.9379 14.6178 11.9379 14.5485V12.7155C11.9379 12.6461 11.9769 12.6201 12.0549 12.6375C12.4795 12.7675 12.7785 12.9191 12.9519 13.0925C13.1339 13.2571 13.2249 13.4608 13.2249 13.7035ZM8.68785 9.69946C8.68785 10.7221 9.27718 11.5151 10.4559 12.0785C10.5165 12.1045 10.5295 12.1521 10.4949 12.2215C10.4602 12.3255 10.4429 12.4165 10.4429 12.4945V14.3925C10.4429 14.4705 10.4082 14.5008 10.3389 14.4835C10.1049 14.4228 9.87085 14.3448 9.63685 14.2495C9.48085 14.1801 9.32918 14.1931 9.18185 14.2885C9.04318 14.3751 8.97385 14.5008 8.97385 14.6655V15.0425C8.97385 15.2678 9.03885 15.4758 9.16885 15.6665C9.29885 15.8485 9.46785 15.9698 9.67585 16.0305C9.90118 16.0998 10.1265 16.1518 10.3519 16.1865C10.4125 16.1951 10.4429 16.2385 10.4429 16.3165V16.8625C10.4429 17.0618 10.5165 17.2351 10.6639 17.3825C10.8112 17.5298 10.9845 17.6035 11.1839 17.6035H11.2099C11.4092 17.6035 11.5782 17.5298 11.7169 17.3825C11.8642 17.2351 11.9379 17.0618 11.9379 16.8625V16.4075C11.9379 16.3295 11.9725 16.2905 12.0419 16.2905C13.1252 16.2558 13.9399 16.0131 14.4859 15.5625C15.0405 15.1118 15.3179 14.4791 15.3179 13.6645C15.3179 13.1185 15.1879 12.6591 14.9279 12.2865C14.6765 11.9051 14.2519 11.5758 13.6539 11.2985C13.6019 11.2725 13.5845 11.2205 13.6019 11.1425C13.6105 11.1165 13.6149 11.0731 13.6149 11.0125V9.08846C13.6149 9.01913 13.6495 8.99313 13.7189 9.01046C13.8489 9.03646 14.0439 9.08413 14.3039 9.15346C14.4772 9.19679 14.6332 9.16646 14.7719 9.06246C14.9192 8.95846 14.9929 8.81979 14.9929 8.64646V8.33446C14.9929 8.11779 14.9279 7.92279 14.7979 7.74946C14.6679 7.56746 14.4989 7.45479 14.2909 7.41146C14.1695 7.38546 13.9789 7.35513 13.7189 7.32046C13.6495 7.30313 13.6149 7.25979 13.6149 7.19046V6.64446C13.6149 6.44513 13.5412 6.27179 13.3939 6.12446C13.2465 5.97713 13.0732 5.90346 12.8739 5.90346H12.8479C12.6485 5.90346 12.4752 5.97713 12.3279 6.12446C12.1892 6.27179 12.1199 6.44513 12.1199 6.64446V7.08646C12.1199 7.16446 12.0809 7.20346 12.0029 7.20346C10.9282 7.21213 10.1049 7.44179 9.53285 7.89246C8.96952 8.34313 8.68785 8.94546 8.68785 9.69946Z"
          fill={
            props.linearGradient
              ? `url(#${gradientId})`
              : disabled
              ? '#8F8F8F'
              : 'currentColor'
          }
        />
      </g>
      <defs>
        <linearGradient
          id={gradientId}
          x1="12.095"
          y1="0.398438"
          x2="2.30989"
          y2="23.5743"
          gradientUnits="userSpaceOnUse"
        >
          <stop
            offset="0.00458717"
            stopColor={disabled ? '#8F8F8F' : '#7BC796'}
          />
          <stop offset="1" stopColor={disabled ? '#EFEFEF' : '#C5E6D1'} />
        </linearGradient>
      </defs>
    </svg>
  );
};
